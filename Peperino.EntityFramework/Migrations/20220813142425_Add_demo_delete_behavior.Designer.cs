// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Peperino.EntityFramework;

#nullable disable

namespace Peperino.EntityFramework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220813142425_Add_demo_delete_behavior")]
    partial class Add_demo_delete_behavior
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Peperino.Domain.Base.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("ExternalId")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id", "ExternalId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Peperino.Domain.Session.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("SessionCookie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "UserExternalId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Peperino.EntityFramework.Entities.Demo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedByExternalId")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedByExternalId")
                        .HasColumnType("text");

                    b.Property<int?>("LastModifiedById")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById", "CreatedByExternalId");

                    b.HasIndex("LastModifiedById", "LastModifiedByExternalId");

                    b.ToTable("Demos");
                });

            modelBuilder.Entity("Peperino.Domain.Session.Session", b =>
                {
                    b.HasOne("Peperino.Domain.Base.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId", "UserExternalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Peperino.EntityFramework.Entities.Demo", b =>
                {
                    b.HasOne("Peperino.Domain.Base.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById", "CreatedByExternalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Peperino.Domain.Base.User", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById", "LastModifiedByExternalId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CreatedBy");

                    b.Navigation("LastModifiedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
